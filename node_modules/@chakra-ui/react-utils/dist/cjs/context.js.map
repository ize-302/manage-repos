{"version":3,"sources":["../../src/context.ts"],"names":["createContext","options","strict","errorMessage","name","Context","React","undefined","displayName","useContext","context","Error","Provider"],"mappings":";;;;;AAAA;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACO,SAASA,aAAT,CAAoCC,OAApC,EAAwE;AAAA,MAApCA,OAAoC;AAApCA,IAAAA,OAAoC,GAAJ,EAAI;AAAA;;AAAA,iBAKzEA,OALyE;AAAA,iCAE3EC,MAF2E;AAAA,MAE3EA,MAF2E,gCAElE,IAFkE;AAAA,uCAG3EC,YAH2E;AAAA,MAG3EA,YAH2E,sCAG5D,4FAH4D;AAAA,MAI3EC,IAJ2E,YAI3EA,IAJ2E;AAO7E,MAAMC,OAAO,gBAAGC,KAAK,CAACN,aAAN,CAA6CO,SAA7C,CAAhB;AAEAF,EAAAA,OAAO,CAACG,WAAR,GAAsBJ,IAAtB;;AAEA,WAASK,UAAT,GAAsB;AACpB,QAAMC,OAAO,GAAGJ,KAAK,CAACG,UAAN,CAAiBJ,OAAjB,CAAhB;;AAEA,QAAI,CAACK,OAAD,IAAYR,MAAhB,EAAwB;AACtB,YAAM,IAAIS,KAAJ,CAAUR,YAAV,CAAN;AACD;;AAED,WAAOO,OAAP;AACD;;AAED,SAAO,CACLL,OAAO,CAACO,QADH,EAELH,UAFK,EAGLJ,OAHK,CAAP;AAKD","sourcesContent":["import * as React from \"react\"\n\nexport interface CreateContextOptions {\n  /**\n   * If `true`, React will throw if context is `null` or `undefined`\n   * In some cases, you might want to support nested context, so you can set it to `false`\n   */\n  strict?: boolean\n  /**\n   * Error message to throw if the context is `undefined`\n   */\n  errorMessage?: string\n  /**\n   * The display name of the context\n   */\n  name?: string\n}\n\ntype CreateContextReturn<T> = [React.Provider<T>, () => T, React.Context<T>]\n\n/**\n * Creates a named context, provider, and hook.\n *\n * @param options create context options\n */\nexport function createContext<ContextType>(options: CreateContextOptions = {}) {\n  const {\n    strict = true,\n    errorMessage = \"useContext: `context` is undefined. Seems you forgot to wrap component within the Provider\",\n    name,\n  } = options\n\n  const Context = React.createContext<ContextType | undefined>(undefined)\n\n  Context.displayName = name\n\n  function useContext() {\n    const context = React.useContext(Context)\n\n    if (!context && strict) {\n      throw new Error(errorMessage)\n    }\n\n    return context\n  }\n\n  return [\n    Context.Provider,\n    useContext,\n    Context,\n  ] as CreateContextReturn<ContextType>\n}\n"],"file":"context.js"}