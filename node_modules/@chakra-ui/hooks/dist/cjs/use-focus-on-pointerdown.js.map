{"version":3,"sources":["../../src/use-focus-on-pointerdown.ts"],"names":["useFocusOnPointerDown","props","doc","elements","isSafari","event","target","isValidTarget","some","element","current"],"mappings":";;;;;AAAA;;AAOA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,qBAAT,CAA+BC,KAA/B,EAAgE;AAAA,MAC7DC,GAD6D,GAC3CD,KAD2C,CAC7DC,GAD6D;AAAA,MACxDC,QADwD,GAC3CF,KAD2C,CACxDE,QADwD;AAGrE,MAAMC,QAAQ,GAAG,0BAAc,QAAd,CAAjB;AAEA,wCAAgBF,GAAhB,EAAqB,aAArB,EAAoC,UAACG,KAAD,EAAW;AAC7C,QAAI,CAACD,QAAL,EAAe;AACf,QAAME,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,QAAMC,aAAa,GAAGJ,QAAQ,CAACK,IAAT,CAAc,UAACC,OAAD,EAAa;AAC/C,UAAI,wBAAYA,OAAZ,CAAJ,EAA0B;AACxB,eAAOH,MAAM,KAAKG,OAAO,CAACC,OAA1B;AACD;;AACD,aAAOJ,MAAM,KAAKG,OAAlB;AACD,KALqB,CAAtB;;AAOA,QAAI,CAAC,4BAAgBH,MAAhB,CAAD,IAA4BC,aAAhC,EAA+C;AAC7C,wBAAMD,MAAN;AACD;AACF,GAbD;AAcD","sourcesContent":["import {\n  detectBrowser,\n  focus,\n  isActiveElement,\n  isRefObject,\n} from \"@chakra-ui/utils\"\nimport { RefObject } from \"react\"\nimport { usePointerEvent } from \"./use-pointer-event\"\n\nexport interface UseFocusOnMouseDownProps {\n  doc: Document | null\n  elements: Array<RefObject<HTMLElement> | HTMLElement | null>\n}\n\n/**\n * Polyfill to get `relatedTarget` working correctly consistently\n * across all browsers.\n *\n * It ensures that elements receives focus on pointer down if\n * it's not the active active element.\n *\n * @internal\n */\nexport function useFocusOnPointerDown(props: UseFocusOnMouseDownProps) {\n  const { doc, elements } = props\n\n  const isSafari = detectBrowser(\"Safari\")\n\n  usePointerEvent(doc, \"pointerdown\", (event) => {\n    if (!isSafari) return\n    const target = event.target as HTMLElement\n    const isValidTarget = elements.some((element) => {\n      if (isRefObject(element)) {\n        return target === element.current\n      }\n      return target === element\n    })\n\n    if (!isActiveElement(target) && isValidTarget) {\n      focus(target)\n    }\n  })\n}\n"],"file":"use-focus-on-pointerdown.js"}