{"version":3,"sources":["../../src/use-slider.ts"],"names":["useBoolean","useCallbackRef","useControllableState","useDimensions","useEventListener","useIds","useUnmountEffect","useUpdateEffect","mergeRefs","ariaAttr","callAllHandlers","clampValue","dataAttr","focus","getBox","getOwnerDocument","isRightClick","normalizeEventKey","percentToValue","roundValueToStep","valueToPercent","useCallback","useMemo","useRef","useState","useSlider","props","min","max","onChange","value","valueProp","defaultValue","isReversed","orientation","id","idProp","isDisabled","isReadOnly","onChangeStart","onChangeEnd","step","getAriaValueText","ariaValueText","ariaLabel","ariaLabelledBy","name","focusThumbOnChange","htmlProps","isDragging","setDragging","isFocused","setFocused","eventSource","setEventSource","isInteractive","computedValue","setValue","getDefaultValue","cleanUpRef","reversedValue","trackValue","trackPercent","isVertical","trackRef","thumbRef","rootRef","thumbId","trackId","getValueFromPointer","event","current","undefined","trackRect","borderBox","clientX","clientY","touches","diff","bottom","left","length","height","width","percent","nextValue","parseFloat","tenSteps","oneStep","constrain","actions","stepUp","next","stepDown","reset","stepTo","onKeyDown","eventKey","keyMap","ArrowRight","ArrowUp","ArrowLeft","ArrowDown","PageUp","PageDown","Home","End","action","preventDefault","stopPropagation","valueText","thumbBoxModel","thumbRect","thumbStyle","position","userSelect","touchAction","orient","vertical","horizontal","rootStyle","WebkitTapHighlightColor","outline","paddingLeft","paddingRight","paddingTop","paddingBottom","trackStyle","transform","top","innerTrackStyle","right","nextTick","shouldUpdate","onMouseDown","on","doc","run","addEventListener","clean","removeEventListener","off","mouseup","onTouchStart","touchend","touchcancel","detach","Object","values","forEach","cleanup","mousedown","touchstart","getRootProps","ref","tabIndex","style","getTrackProps","getInnerTrackProps","getThumbProps","role","onFocus","onBlur","getMarkerProps","isInRange","isHighlighted","markerPercent","markerStyle","pointerEvents","getInputProps","type","state","options"],"mappings":"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","sourcesContent":["import {\n  useBoolean,\n  useCallbackRef,\n  useControllableState,\n  useDimensions,\n  useEventListener,\n  useIds,\n  useUnmountEffect,\n  useUpdateEffect,\n} from \"@chakra-ui/hooks\"\nimport { EventKeyMap, mergeRefs, PropGetter } from \"@chakra-ui/react-utils\"\nimport {\n  ariaAttr,\n  callAllHandlers,\n  clampValue,\n  dataAttr,\n  Dict,\n  focus,\n  getBox,\n  getOwnerDocument,\n  isRightClick,\n  normalizeEventKey,\n  percentToValue,\n  roundValueToStep,\n  valueToPercent,\n} from \"@chakra-ui/utils\"\nimport { CSSProperties, useCallback, useMemo, useRef, useState } from \"react\"\n\nexport interface UseSliderProps {\n  /**\n   * The minimum allowed value of the slider. Cannot be greater than max.\n   * @default 0\n   */\n  min?: number\n  /**\n   * The maximum allowed value of the slider. Cannot be less than min.\n   * @default 100\n   */\n  max?: number\n  /**\n   * The step in which increments/decrements have to be made\n   * @default 1\n   */\n  step?: number\n  /**\n   * The value of the slider in controlled mode\n   */\n  value?: number\n  /**\n   * The initial value of the slider in uncontrolled mode\n   */\n  defaultValue?: number\n  /**\n   * orientation of the slider\n   * @default \"horizontal\"\n   */\n  orientation?: \"horizontal\" | \"vertical\"\n  /**\n   * If `true`, the value will be incremented or decremented in reverse.\n   */\n  isReversed?: boolean\n  /**\n   * function gets called whenever the user starts dragging the slider handle\n   */\n  onChangeStart?(value: number): void\n  /**\n   * function gets called whenever the user stops dragging the slider handle.\n   */\n  onChangeEnd?(value: number): void\n  /**\n   * function gets called whenever the slider handle is being dragged or clicked\n   */\n  onChange?(value: number): void\n  /**\n   * The base `id` to use for the slider and its components\n   */\n  id?: string\n  /**\n   * The name attribute of the hidden `input` field.\n   * This is particularly useful in forms\n   */\n  name?: string\n  /**\n   * If `true`, the slider will be disabled\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the slider will be in `read-only` state\n   */\n  isReadOnly?: boolean\n  /**\n   * Function that returns the `aria-valuetext` for screen readers.\n   * It is mostly used to generate a more human-readable\n   * representation of the value for assistive technologies\n   */\n  getAriaValueText?(value: number): string\n  /**\n   * If `false`, the slider handle will not capture focus when value changes.\n   * @default true\n   */\n  focusThumbOnChange?: boolean\n  /**\n   * The static string to use used for `aria-valuetext`\n   */\n  \"aria-valuetext\"?: string\n  /**\n   * The static string to use used for `aria-label`\n   * if no visible label is used.\n   */\n  \"aria-label\"?: string\n  /**\n   * The static string `aria-labelledby` that points to the\n   * ID of the element that serves as label for the slider\n   */\n  \"aria-labelledby\"?: string\n}\n\ntype EventSource = \"mouse\" | \"touch\" | \"keyboard\"\n\n/**\n * React hook that implements an accessible range slider.\n *\n * It is an alternative to `<input type=\"range\" />`, and returns\n * prop getters for the component parts\n *\n * @see Docs     https://chakra-ui.com/docs/form/slider\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.1/#slider\n */\nexport function useSlider(props: UseSliderProps) {\n  const {\n    min = 0,\n    max = 100,\n    onChange,\n    value: valueProp,\n    defaultValue,\n    isReversed,\n    orientation,\n    id: idProp,\n    isDisabled,\n    isReadOnly,\n    onChangeStart,\n    onChangeEnd,\n    step = 1,\n    getAriaValueText,\n    \"aria-valuetext\": ariaValueText,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    name,\n    focusThumbOnChange = true,\n    ...htmlProps\n  } = props\n\n  const [isDragging, setDragging] = useBoolean()\n  const [isFocused, setFocused] = useBoolean()\n  const [eventSource, setEventSource] = useState<EventSource>()\n\n  const isInteractive = !(isDisabled || isReadOnly)\n\n  /**\n   * Enable the slider handle controlled and uncontrolled scenarios\n   */\n  const [computedValue, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue ?? getDefaultValue(min, max),\n    onChange,\n  })\n\n  /**\n   * Slider uses DOM APIs to add and remove event listeners.\n   * Noticed some issues with React's synthetic events.\n   *\n   * We use `ref` to save the functions used to remove\n   * the event listeners.\n   *\n   * Ideally, we'll love to use pointer-events API but it is\n   * not fully supported in all browsers.\n   */\n  const cleanUpRef = useRef<Dict<Function>>({})\n\n  /**\n   * Constrain the value because it can't be less than min\n   * or greater than max\n   */\n  const value = clampValue(computedValue, min, max)\n\n  const reversedValue = max - value + min\n  const trackValue = isReversed ? reversedValue : value\n  const trackPercent = valueToPercent(trackValue, min, max)\n\n  const isVertical = orientation === \"vertical\"\n\n  /**\n   * Let's keep a reference to the slider track and thumb\n   */\n  const trackRef = useRef<any>(null)\n  const thumbRef = useRef<any>(null)\n  const rootRef = useRef<any>(null)\n\n  /**\n   * Generate unique ids for component parts\n   */\n  const [thumbId, trackId] = useIds(idProp, `slider-thumb`, `slider-track`)\n\n  /**\n   * Get relative value of slider from the event by tracking\n   * how far you clicked within the track to determine the value\n   */\n  const getValueFromPointer = useCallback(\n    (event) => {\n      if (!trackRef.current) return undefined\n\n      const trackRect = getBox(trackRef.current).borderBox\n      const { clientX, clientY } = event.touches?.[0] ?? event\n\n      const diff = isVertical\n        ? trackRect.bottom - clientY\n        : clientX - trackRect.left\n\n      const length = isVertical ? trackRect.height : trackRect.width\n      let percent = diff / length\n\n      if (isReversed) {\n        percent = 1 - percent\n      }\n\n      let nextValue = percentToValue(percent, min, max)\n\n      if (step) {\n        nextValue = parseFloat(roundValueToStep(nextValue, min, step))\n      }\n\n      nextValue = clampValue(nextValue, min, max)\n\n      return nextValue\n    },\n    [isVertical, isReversed, max, min, step],\n  )\n\n  const tenSteps = (max - min) / 10\n  const oneStep = step || (max - min) / 100\n\n  const constrain = useCallback(\n    (value: number) => {\n      // bail out if slider isn't interactive\n      if (!isInteractive) return\n      value = parseFloat(roundValueToStep(value, min, oneStep))\n      value = clampValue(value, min, max)\n      setValue(value)\n    },\n    [oneStep, max, min, setValue, isInteractive],\n  )\n\n  const actions = useMemo(\n    () => ({\n      stepUp: (step = oneStep) => {\n        const next = isReversed ? value - step : value + step\n        constrain(next)\n      },\n      stepDown: (step = oneStep) => {\n        const next = isReversed ? value + step : value - step\n        constrain(next)\n      },\n      reset: () => constrain(defaultValue || 0),\n      stepTo: (value: number) => constrain(value),\n    }),\n    [constrain, isReversed, value, oneStep, defaultValue],\n  )\n\n  /**\n   * Keyboard interaction to ensure users can operate\n   * the slider using only their keyboard.\n   */\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = normalizeEventKey(event)\n      const keyMap: EventKeyMap = {\n        ArrowRight: () => actions.stepUp(),\n        ArrowUp: () => actions.stepUp(),\n        ArrowLeft: () => actions.stepDown(),\n        ArrowDown: () => actions.stepDown(),\n        PageUp: () => actions.stepUp(tenSteps),\n        PageDown: () => actions.stepDown(tenSteps),\n        Home: () => constrain(min),\n        End: () => constrain(max),\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        event.stopPropagation()\n        setEventSource(\"keyboard\")\n        action(event)\n      }\n    },\n    [actions, constrain, max, min, tenSteps],\n  )\n\n  /**\n   * ARIA (Optional): To define a human readable representation of the value,\n   * we allow users pass aria-valuetext.\n   */\n  const valueText = getAriaValueText?.(value) ?? ariaValueText\n\n  /**\n   * Measure the dimensions of the thumb so\n   * we can center it within the track properly\n   */\n  const thumbBoxModel = useDimensions(thumbRef)\n  const thumbRect = thumbBoxModel?.borderBox ?? {\n    width: 0,\n    height: 0,\n  }\n\n  /**\n   * Compute styles for all component parts.\n   */\n  const thumbStyle: React.CSSProperties = {\n    position: \"absolute\",\n    userSelect: \"none\",\n    touchAction: \"none\",\n    ...orient({\n      orientation,\n      vertical: {\n        bottom: `calc(${trackPercent}% - ${thumbRect.height / 2}px)`,\n      },\n      horizontal: {\n        left: `calc(${trackPercent}% - ${thumbRect.width / 2}px)`,\n      },\n    }),\n  }\n\n  const rootStyle: React.CSSProperties = {\n    position: \"relative\",\n    touchAction: \"none\",\n    WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n    userSelect: \"none\",\n    outline: 0,\n    ...orient({\n      orientation,\n      vertical: {\n        paddingLeft: thumbRect.width / 2,\n        paddingRight: thumbRect.width / 2,\n      },\n      horizontal: {\n        paddingTop: thumbRect.height / 2,\n        paddingBottom: thumbRect.height / 2,\n      },\n    }),\n  }\n\n  const trackStyle: React.CSSProperties = {\n    position: \"absolute\",\n    ...orient({\n      orientation,\n      vertical: {\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        height: \"100%\",\n      },\n      horizontal: {\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        width: \"100%\",\n      },\n    }),\n  }\n\n  const innerTrackStyle: React.CSSProperties = {\n    ...trackStyle,\n    ...orient({\n      orientation,\n      vertical: isReversed\n        ? { height: `${100 - trackPercent}%`, top: 0 }\n        : { height: `${trackPercent}%`, bottom: 0 },\n      horizontal: isReversed\n        ? { width: `${100 - trackPercent}%`, right: 0 }\n        : { width: `${trackPercent}%`, left: 0 },\n    }),\n  }\n\n  useUpdateEffect(() => {\n    if (thumbRef.current && focusThumbOnChange) {\n      focus(thumbRef.current, { nextTick: true })\n    }\n  }, [value])\n\n  useUpdateEffect(() => {\n    const shouldUpdate = !isDragging && eventSource !== \"keyboard\"\n\n    if (shouldUpdate) {\n      onChangeEnd?.(value)\n    }\n\n    if (eventSource === \"keyboard\") {\n      onChangeEnd?.(value)\n    }\n  }, [isDragging, onChangeEnd, value, eventSource])\n\n  const onMouseDown = useCallbackRef((event: MouseEvent) => {\n    /**\n     * Prevent update if it is right-click\n     */\n    if (isRightClick(event)) return\n\n    if (!isInteractive || !rootRef.current) return\n\n    setDragging.on()\n    onChangeStart?.(value)\n\n    const doc = getOwnerDocument(rootRef.current)\n\n    const run = (event: MouseEvent) => {\n      const nextValue = getValueFromPointer(event)\n\n      if (nextValue != null) {\n        setEventSource(\"mouse\")\n        setValue(nextValue)\n      }\n    }\n\n    run(event)\n\n    doc?.addEventListener(\"mousemove\", run)\n\n    const clean = () => {\n      doc?.removeEventListener(\"mousemove\", run)\n      setDragging.off()\n    }\n\n    doc?.addEventListener(\"mouseup\", clean)\n    cleanUpRef.current.mouseup = () => {\n      doc?.removeEventListener(\"mouseup\", clean)\n    }\n  })\n\n  const onTouchStart = useCallbackRef((event: TouchEvent) => {\n    if (!isInteractive || !rootRef.current) return\n\n    // Prevent scrolling for touch events\n    event.preventDefault()\n\n    setDragging.on()\n    onChangeStart?.(value)\n\n    const doc = getOwnerDocument(rootRef.current)\n\n    const run = (event: TouchEvent) => {\n      const nextValue = getValueFromPointer(event)\n\n      if (nextValue != null) {\n        setEventSource(\"touch\")\n        setValue(nextValue)\n      }\n    }\n\n    run(event)\n\n    doc?.addEventListener(\"touchmove\", run)\n\n    const clean = () => {\n      doc?.removeEventListener(\"touchmove\", run)\n      setDragging.off()\n    }\n\n    doc?.addEventListener(\"touchend\", clean)\n    doc?.addEventListener(\"touchcancel\", clean)\n\n    cleanUpRef.current.touchend = () => {\n      doc?.removeEventListener(\"touchend\", clean)\n    }\n\n    cleanUpRef.current.touchcancel = () => {\n      doc?.removeEventListener(\"touchcancel\", clean)\n    }\n  })\n\n  /**\n   * Remove all event handlers\n   */\n  const detach = () => {\n    Object.values(cleanUpRef.current).forEach((cleanup) => {\n      cleanup?.()\n    })\n    cleanUpRef.current = {}\n  }\n\n  /**\n   * Ensure we clean up listeners when slider unmounts\n   */\n  useUnmountEffect(detach)\n\n  useUpdateEffect(() => {\n    if (!isDragging) detach()\n  }, [isDragging])\n\n  cleanUpRef.current.mousedown = useEventListener(\n    \"mousedown\",\n    onMouseDown,\n    rootRef.current,\n  )\n\n  cleanUpRef.current.touchstart = useEventListener(\n    \"touchstart\",\n    onTouchStart,\n    rootRef.current,\n  )\n\n  const getRootProps: PropGetter = (props = {}, ref = null) => ({\n    ...props,\n    ...htmlProps,\n    ref: mergeRefs(ref, rootRef),\n    tabIndex: -1,\n    \"aria-disabled\": ariaAttr(isDisabled),\n    \"data-focused\": dataAttr(isFocused),\n    style: {\n      ...props.style,\n      ...rootStyle,\n    },\n  })\n\n  const getTrackProps: PropGetter = (props = {}, ref = null) => ({\n    ...props,\n    ref: mergeRefs(ref, trackRef),\n    id: trackId,\n    \"data-disabled\": dataAttr(isDisabled),\n    style: {\n      ...props.style,\n      ...trackStyle,\n    },\n  })\n\n  const getInnerTrackProps: PropGetter = (props = {}, ref = null) => ({\n    ...props,\n    ref,\n    style: {\n      ...props.style,\n      ...innerTrackStyle,\n    },\n  })\n\n  const getThumbProps: PropGetter = (props = {}, ref = null) => ({\n    ...props,\n    ref: mergeRefs(ref, thumbRef),\n    role: \"slider\",\n    tabIndex: 0,\n    id: thumbId,\n    \"data-active\": dataAttr(isDragging),\n    \"aria-valuetext\": valueText,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": value,\n    \"aria-orientation\": orientation,\n    \"aria-disabled\": ariaAttr(isDisabled),\n    \"aria-readonly\": ariaAttr(isReadOnly),\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabel ? undefined : ariaLabelledBy,\n    style: {\n      ...props.style,\n      ...thumbStyle,\n    },\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n    onFocus: callAllHandlers(props.onFocus, setFocused.on),\n    onBlur: callAllHandlers(props.onBlur, setFocused.off),\n  })\n\n  const getMarkerProps: PropGetter<any, { value?: any }> = (\n    props = {},\n    ref = null,\n  ) => {\n    const isInRange = !(props.value < min || props.value > max)\n    const isHighlighted = value >= props.value\n    const markerPercent = valueToPercent(props.value, min, max)\n\n    const markerStyle: React.CSSProperties = {\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      ...orient({\n        orientation,\n        vertical: {\n          bottom: isReversed ? `${100 - markerPercent}%` : `${markerPercent}%`,\n        },\n        horizontal: {\n          left: isReversed ? `${100 - markerPercent}%` : `${markerPercent}%`,\n        },\n      }),\n    }\n\n    return {\n      ...props,\n      ref,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(!isInRange),\n      \"data-highlighted\": dataAttr(isHighlighted),\n      style: {\n        ...props.style,\n        ...markerStyle,\n      },\n    }\n  }\n\n  const getInputProps: PropGetter<HTMLInputElement> = (\n    props = {},\n    ref = null,\n  ) => ({\n    ...props,\n    ref,\n    type: \"hidden\",\n    value,\n    name,\n  })\n\n  return {\n    state: {\n      value,\n      isFocused,\n      isDragging,\n    },\n    actions,\n    getRootProps,\n    getTrackProps,\n    getInnerTrackProps,\n    getThumbProps,\n    getMarkerProps,\n    getInputProps,\n  }\n}\n\nexport type UseSliderReturn = ReturnType<typeof useSlider>\n\nfunction orient(options: {\n  orientation: UseSliderProps[\"orientation\"]\n  vertical: CSSProperties\n  horizontal: CSSProperties\n}) {\n  const { orientation, vertical, horizontal } = options\n  return orientation === \"vertical\" ? vertical : horizontal\n}\n\n/**\n * The browser <input type=\"range\" /> calculates\n * the default value of a slider by using mid-point\n * between the min and the max.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range\n */\nfunction getDefaultValue(min: number, max: number) {\n  return max < min ? min : min + (max - min) / 2\n}\n"],"file":"use-slider.js"}