{"version":3,"sources":["../../src/use-popover.ts"],"names":["TRIGGER","click","hover","usePopover","props","closeOnBlur","closeOnEsc","initialFocusRef","placementProp","placement","flip","gutter","id","returnFocusOnClose","autoFocus","arrowSize","arrowShadowColor","modifiers","trigger","openDelay","closeDelay","isLazy","isOpen","onClose","onOpen","onToggle","triggerRef","popoverRef","isHoveringRef","hasHeader","setHasHeader","hasBody","setHasBody","triggerId","popoverId","headerId","bodyId","popper","doc","isBrowser","current","elements","focusRef","visible","shouldFocus","getPopoverProps","_ref","popoverProps","style","transformOrigin","popperCSSVars","varRef","ref","children","tabIndex","role","onKeyDown","event","key","onBlur","relatedTarget","targetIsPopover","targetIsTrigger","isValidBlur","undefined","onMouseEnter","onMouseLeave","setTimeout","getPopoverPositionerProps","popperRef","visibility","openTimeout","closeTimeout","getTriggerProps","triggerProps","referenceRef","onClick","onFocus","window","clearTimeout","getHeaderProps","node","getBodyProps","forceUpdate","getArrowProps","getArrowInnerProps"],"mappings":"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","sourcesContent":["import {\n  useDisclosure,\n  useFocusOnHide,\n  useFocusOnPointerDown,\n  useFocusOnShow,\n  useIds,\n} from \"@chakra-ui/hooks\"\nimport {\n  Placement,\n  popperCSSVars,\n  usePopper,\n  UsePopperProps,\n} from \"@chakra-ui/popper\"\nimport { HTMLProps, mergeRefs, PropGetter } from \"@chakra-ui/react-utils\"\nimport {\n  callAllHandlers,\n  contains,\n  FocusableElement,\n  getOwnerDocument,\n  getRelatedTarget,\n  isBrowser,\n  px,\n} from \"@chakra-ui/utils\"\nimport { RefObject, useCallback, useEffect, useRef, useState } from \"react\"\n\nconst TRIGGER = {\n  click: \"click\",\n  hover: \"hover\",\n} as const\n\nexport interface UsePopoverProps {\n  /**\n   * The html `id` attribute of the popover.\n   * If not provided, we generate a unique id.\n   *\n   * This `id` is also used to auto-generate the `aria-labelledby`\n   * and `aria-decribedby` attributes that points to the `PopoverHeader` and `PopoverBody`\n   */\n  id?: string\n  /**\n   * If `true`, the popover will be opened in controlled mode.\n   */\n  isOpen?: boolean\n  /**\n   * If `true`, the popover will be initially opened.\n   */\n  defaultIsOpen?: boolean\n  /**\n   * The `ref` of the element that should receive focus when the popover opens.\n   */\n  initialFocusRef?: RefObject<FocusableElement>\n  /**\n   * If `true`, focus will be returned to the element that triggers the popover\n   * when it closes\n   */\n  returnFocusOnClose?: boolean\n  /**\n   * If `true`, focus will be transferred to the first interactive element\n   * when the popover opens\n   */\n  autoFocus?: boolean\n  /**\n   * The gap (in pixels) to apply between the popover and the target.\n   * Used by `popper.js`\n   */\n  gutter?: number\n  /**\n   * The placement of the popover\n   */\n  placement?: Placement\n  /**\n   * The flip of the popover\n   */\n  flip?: boolean\n  /**\n   * If `true`, the popover will close when you blur out it by\n   * clicking outside or tabbing out\n   */\n  closeOnBlur?: boolean\n  /**\n   * If `true`, the popover will close when you hit the `Esc` key\n   */\n  closeOnEsc?: boolean\n  /**\n   * Callback fired when the popover opens\n   */\n  onOpen?: () => void\n  /**\n   * Callback fired when the popover closes\n   */\n  onClose?: () => void\n  /**\n   * The size of the popover arrow\n   */\n  arrowSize?: number\n  /**\n   * The `box-shadow` of the popover arrow\n   */\n  arrowShadowColor?: string\n  /**\n   * The Popper.js modifiers to use.\n   */\n  modifiers?: UsePopperProps[\"modifiers\"]\n  /**\n   * The interaction that triggers the popover.\n   *\n   * `hover` - means the popover will open when you hover with mouse or\n   * focus with keyboard on the popover trigger\n   *\n   * `click` - means the popover will open on click or\n   * press `Enter` to `Space` on keyboard\n   */\n  trigger?: keyof typeof TRIGGER\n  openDelay?: number\n  closeDelay?: number\n  /**\n   * Performance 🚀:\n   * If `true`, the PopoverContent rendering will be deferred\n   * until the popover is open.\n   */\n  isLazy?: boolean\n}\n\n/**\n * @internal\n */\nexport function usePopover(props: UsePopoverProps = {}) {\n  const {\n    closeOnBlur = true,\n    closeOnEsc = true,\n    initialFocusRef,\n    placement: placementProp,\n    flip,\n    gutter,\n    id,\n    returnFocusOnClose = true,\n    autoFocus = true,\n    arrowSize,\n    arrowShadowColor,\n    modifiers,\n    trigger = TRIGGER.click,\n    openDelay = 200,\n    closeDelay = 200,\n    isLazy,\n  } = props\n\n  const { isOpen, onClose, onOpen, onToggle } = useDisclosure(props)\n\n  const triggerRef = useRef<HTMLElement>(null)\n  const popoverRef = useRef<HTMLElement>(null)\n\n  const isHoveringRef = useRef(false)\n\n  const [hasHeader, setHasHeader] = useState(false)\n  const [hasBody, setHasBody] = useState(false)\n\n  const [triggerId, popoverId, headerId, bodyId] = useIds(\n    id,\n    \"popover-trigger\",\n    \"popover-content\",\n    \"popover-header\",\n    \"popover-body\",\n  )\n\n  const popper = usePopper({\n    placement: placementProp,\n    flip,\n    gutter,\n    modifiers,\n  })\n\n  useFocusOnPointerDown({\n    doc: isBrowser ? getOwnerDocument(triggerRef.current) : null,\n    elements: [triggerRef],\n  })\n\n  useFocusOnHide(popoverRef, {\n    focusRef: triggerRef,\n    visible: isOpen,\n    shouldFocus: returnFocusOnClose && trigger === TRIGGER.click,\n  })\n\n  useFocusOnShow(popoverRef, {\n    focusRef: initialFocusRef,\n    visible: isOpen,\n    shouldFocus: autoFocus && trigger === TRIGGER.click,\n  })\n\n  const getPopoverProps: PropGetter = useCallback(\n    (props = {}, _ref = null) => {\n      const popoverProps: HTMLProps = {\n        ...props,\n        style: {\n          ...props.style,\n          transformOrigin: popperCSSVars.transformOrigin.varRef,\n        },\n        ref: mergeRefs(popoverRef, _ref),\n        children: !isLazy || isOpen ? props.children : null,\n        id: popoverId,\n        tabIndex: -1,\n        role: \"dialog\",\n        onKeyDown: callAllHandlers(props.onKeyDown, (event) => {\n          if (closeOnEsc && event.key === \"Escape\") {\n            onClose()\n          }\n        }),\n        onBlur: callAllHandlers(props.onBlur, (event) => {\n          const relatedTarget = getRelatedTarget(event)\n          const targetIsPopover = contains(popoverRef.current, relatedTarget)\n          const targetIsTrigger = contains(triggerRef.current, relatedTarget)\n          const isValidBlur = !targetIsPopover && !targetIsTrigger\n\n          if (isOpen && closeOnBlur && isValidBlur) {\n            onClose()\n          }\n        }),\n        \"aria-labelledby\": hasHeader ? headerId : undefined,\n        \"aria-describedby\": hasBody ? bodyId : undefined,\n      }\n\n      if (trigger === TRIGGER.hover) {\n        popoverProps.role = \"tooltip\"\n        popoverProps.onMouseEnter = callAllHandlers(props.onMouseEnter, () => {\n          isHoveringRef.current = true\n        })\n        popoverProps.onMouseLeave = callAllHandlers(props.onMouseLeave, () => {\n          isHoveringRef.current = false\n          setTimeout(onClose, closeDelay)\n        })\n      }\n\n      return popoverProps\n    },\n    [\n      isLazy,\n      isOpen,\n      popoverId,\n      hasHeader,\n      headerId,\n      hasBody,\n      bodyId,\n      trigger,\n      closeOnEsc,\n      onClose,\n      closeDelay,\n      closeOnBlur,\n    ],\n  )\n\n  const getPopoverPositionerProps: PropGetter = useCallback(\n    (props = {}, _ref = null) => ({\n      ...props,\n      ref: mergeRefs(popper.popperRef, _ref),\n      style: {\n        ...props.style,\n        [popperCSSVars.arrowSize.var]: arrowSize ? px(arrowSize) : undefined,\n        [popperCSSVars.arrowShadowColor.var]: arrowShadowColor,\n        visibility: isOpen ? \"visible\" : \"hidden\",\n      },\n    }),\n    [arrowShadowColor, arrowSize, isOpen, popper.popperRef],\n  )\n\n  const openTimeout = useRef<number>()\n  const closeTimeout = useRef<number>()\n\n  const getTriggerProps: PropGetter = useCallback(\n    (props = {}, _ref = null) => {\n      const triggerProps: HTMLProps = {\n        ...props,\n        ref: mergeRefs(triggerRef, _ref, popper.referenceRef),\n        id: triggerId,\n        \"aria-haspopup\": \"dialog\",\n        \"aria-expanded\": isOpen,\n        \"aria-controls\": popoverId,\n      }\n\n      if (trigger === TRIGGER.click) {\n        triggerProps.onClick = callAllHandlers(props.onClick, onToggle)\n      }\n\n      if (trigger === TRIGGER.hover) {\n        /**\n         * Any content that shows on pointer hover should also show on keyboard focus.\n         * Consider focus and blur to be the `hover` for keyboard users.\n         *\n         * @see https://www.w3.org/WAI/WCAG21/Understanding/content-on-hover-or-focus.html\n         */\n        triggerProps.onFocus = callAllHandlers(props.onFocus, onOpen)\n        triggerProps.onBlur = callAllHandlers(props.onBlur, onClose)\n\n        /**\n         * Any content that shows on hover or focus must be dismissible.\n         * This case pressing `Escape` will dismiss the popover\n         */\n        triggerProps.onKeyDown = callAllHandlers(props.onKeyDown, (event) => {\n          if (event.key === \"Escape\") {\n            onClose()\n          }\n        })\n\n        triggerProps.onMouseEnter = callAllHandlers(props.onMouseEnter, () => {\n          isHoveringRef.current = true\n          openTimeout.current = window.setTimeout(onOpen, openDelay)\n        })\n\n        triggerProps.onMouseLeave = callAllHandlers(props.onMouseLeave, () => {\n          isHoveringRef.current = false\n\n          if (openTimeout.current) {\n            clearTimeout(openTimeout.current)\n            openTimeout.current = undefined\n          }\n\n          closeTimeout.current = window.setTimeout(() => {\n            if (isHoveringRef.current === false) {\n              onClose()\n            }\n          }, closeDelay)\n        })\n      }\n\n      return triggerProps\n    },\n    [\n      triggerId,\n      isOpen,\n      popoverId,\n      trigger,\n      popper.referenceRef,\n      onToggle,\n      onOpen,\n      onClose,\n      openDelay,\n      closeDelay,\n    ],\n  )\n\n  useEffect(() => {\n    return () => {\n      if (openTimeout.current) {\n        clearTimeout(openTimeout.current)\n      }\n      if (closeTimeout.current) {\n        clearTimeout(closeTimeout.current)\n      }\n    }\n  }, [])\n\n  const getHeaderProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      id: headerId,\n      ref: mergeRefs(ref, (node: HTMLElement | null) => {\n        setHasHeader(!!node)\n      }),\n    }),\n    [headerId],\n  )\n\n  const getBodyProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      id: bodyId,\n      ref: mergeRefs(ref, (node) => {\n        setHasBody(!!node)\n      }),\n    }),\n    [bodyId],\n  )\n\n  return {\n    forceUpdate: popper.forceUpdate,\n    isOpen,\n    onClose,\n    getArrowProps: popper.getArrowProps,\n    getArrowInnerProps: popper.getArrowInnerProps,\n    getPopoverPositionerProps,\n    getPopoverProps,\n    getTriggerProps,\n    getHeaderProps,\n    getBodyProps,\n  }\n}\n\nexport type UsePopoverReturn = ReturnType<typeof usePopover>\n"],"file":"use-popover.js"}